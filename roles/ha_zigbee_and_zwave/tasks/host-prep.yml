---
- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      # - resolvconf ## Breaks DNS during playbook run. Not entirely sure why it's being installed... that's why I'm leaving it here.
      - gnupg
      - lsb-release
      - wireguard
      - tar
      - unattended-upgrades
    state: present

## Install docker

- name: Add Dockerâ€™s official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian bullseye stable"
    state: present

- name: Install Docker and containerd
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
    update_cache: yes

- name: Create docker directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /docker
    - /docker/homeassistant
    - /docker/homeassistant/config
    - /docker/homeassistant/config/homeassistant
    - /docker/homeassistant/config/homeassistant/homeassistant-config
    - /docker/homeassistant/config/zwave
    - /docker/homeassistant/config/zwave/zwave-config
    - /docker/homeassistant/config/mosquitto
    - /docker/homeassistant/config/mosquitto/config
    - /docker/homeassistant/config/mosquitto/data
    - /docker/homeassistant/config/mosquitto/log
    - /docker/homeassistant/config/zigbee2mqtt
    - /docker/homeassistant/config/zigbee2mqtt/data
    - /docker/wireguard
    - /docker/wireguard/config

- name: Create a docker network - utilized to set a static IP for cloudlflared container.
  ansible.builtin.shell: |
    docker network inspect cloudflared_network >/dev/null 2>&1 || \
    docker network create \
      --driver bridge \
      --subnet 172.30.0.0/24 \
      --gateway 172.30.0.1 \
      cloudflared_network
  args:
    executable: /bin/bash

- name: Ensure modules-load.d directory exists
  ansible.builtin.file:
    path: /etc/modules-load.d
    state: directory
    mode: '0755'

- name: Enable WireGuard kernel module at boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/wireguard.conf
    content: "wireguard\n"
    owner: root
    group: root
    mode: '0644'

- name: Load WireGuard module now (immediate effect)
  ansible.builtin.command: modprobe wireguard
  register: modprobe_result
  failed_when: modprobe_result.rc != 0 and 'Module already in kernel' not in modprobe_result.stderr
  changed_when: modprobe_result.rc == 0

- name: Deploy Wireguard Docker Compose File
  template:
    src: wireguard/docker-compose.yml.j2
    dest: /docker/wireguard/docker-compose.yml